-- TEST TABLES EXIST
DECLARE
BEGIN
	IF MKT_UTIL.FNC_IS_EXIST_TABLE('TEST   TABLE')
	THEN
		DBMS_OUTPUT.PUT_LINE('TABLE IS EXIST');
	ELSE
		DBMS_OUTPUT.PUT_LINE('NOT FOUND');
	END IF;
END;
/

-- TEST CREATE TABLE
DECLARE
BEGIN
    MKT_UTIL.PRC_INIT_LOGGING_TABLES();
END;
/

-- TEST FOR GET LOGGING TABLES
SELECT * FROM ODS_LOGGING_RUNNING_TIME;
SELECT * FROM ODS_LOGGING_EXCEPTION;

-- TEST MKT_LOGGING
DECLARE
LOGGER_1 MKT_LOGGING;
BEGIN
LOGGER_1 := NEW MKT_LOGGING(        
        PI_APP_USER             =>'VINHPT',
        PI_UNIT_NAME            =>'TEST UNIT',
        PI_UNIT_TYPE            =>'PROCESSING',
        PI_TRANSACTION_CODE     =>'123456');
--LOGGER_1.PRC_PRINT_INFO();
LOGGER_1.LOGGER_RUN.PRC_PRINT_INFO();

END;
/


-- TEST MKT_UTIL
DECLARE
BEGIN
	MKT_UTIL.PRC_INIT_LOGGING_INSTANCE(        
        PI_APP_USER             =>'VINHPT',
        PI_UNIT_NAME            =>'TEST UNIT',
        PI_UNIT_TYPE            =>'PROCESSING',
        PI_TRANSACTION_CODE     =>'123456');
	MKT_UTIL.G_MKT_LOGGING_INSTANCE.PRC_PRINT_INFO();
	RAISE NO_DATA_FOUND;
EXCEPTION
	WHEN OTHERS 
		THEN
			MKT_UTIL.PRC_INIT_ERROR(
                PI_MESSAGE          =>'FOUND ERROR',
                PI_LOG_PLSQL_LINE   =>'');
			MKT_UTIL.G_MKT_LOGGING_INSTANCE.LOGGER_EXCEPTION.PRC_PRINT_INFO();
END;
/

BEGIN
--mkt_util.PRC_INIT_LOGGING_TABLES(TRUE);
mkt_util.prc_print_config();
mkt_util.PRC_INS_LOGGING_RUNNING_TIME(PI_DESCRIPTION=>'TEST');
END;
/