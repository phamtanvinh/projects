/* ******************************************************************
** PKG_CONFIG_UTIL
** ******************************************************************/

CREATE OR REPLACE PACKAGE PKG_CONFIG_UTIL
AS
-- GLOBAL ATTRIBUTES
    G_CONFIG        TYP_CONFIG;
    G_TAB_CONFIG    VARCHAR2(64) := PKG_META_DATA.G_CONFIG('TAB_CONFIG');
-- FUNCTION METHODS
    FUNCTION FNC_GET_CONFIG RETURN TYP_CONFIG;
-- PROCEDURE METHODS
    PROCEDURE PRC_INIT_CONFIG(PI_IS_FORCED BOOLEAN DEFAULT FALSE);
    PROCEDURE PRC_CREATE_TAB_CONFIG(PI_IS_FORCED BOOLEAN DEFAULT FALSE);
    PROCEDURE PRC_INS_INTO_TAB_CONFIG(PI_CONFIG TYP_CONFIG);
END PKG_CONFIG_UTIL;
/

CREATE OR REPLACE PACKAGE BODY PKG_CONFIG_UTIL
AS
-- FUNCTION METHODS
    FUNCTION FNC_GET_CONFIG 
    RETURN TYP_CONFIG
    IS
    BEGIN
        RETURN G_CONFIG;
    END;

-- PROCEDURE METHODS
    PROCEDURE PRC_CREATE_TAB_CONFIG(PI_IS_FORCED BOOLEAN DEFAULT FALSE)
    IS
    BEGIN
        IF NOT PKG_UTIL.FNC_IS_EXIST_TABLE(G_TAB_CONFIG) 
        THEN
            EXECUTE IMMEDIATE 'CREATE TABLE '||G_TAB_CONFIG||' OF TYP_CONFIG';
            DBMS_OUTPUT.PUT_LINE('Table '||G_TAB_CONFIG||' is created');
        ELSIF PI_IS_FORCED
        THEN
            PKG_UTIL.PRC_DROP_TABLE(PI_TABLE_NAME=>G_TAB_CONFIG, PI_IS_FORCED=>PI_IS_FORCED);
            DBMS_OUTPUT.PUT_LINE('Table '||G_TAB_CONFIG||' is created');
            EXECUTE IMMEDIATE 'CREATE TABLE '||G_TAB_CONFIG||' OF TYP_CONFIG';
        ELSE
            DBMS_OUTPUT.PUT_LINE('Table '||G_TAB_CONFIG||' was exist');
        END IF;
    END;

    PROCEDURE PRC_INIT_CONFIG(PI_IS_FORCED BOOLEAN DEFAULT FALSE)
    IS
    BEGIN
        IF NOT PKG_UTIL.FNC_IS_EXIST_TABLE(G_TAB_CONFIG)
        THEN
            GOTO GOTO_FIRST_INIT;
        ELSIF PI_IS_FORCED
        THEN
            GOTO GOTO_FORCED;
        ELSE
            DBMS_OUTPUT.PUT_LINE('Cannot initialize config...');
        END IF;
        <<GOTO_FIRST_INIT>>
            PKG_CONFIG_UTIL.PRC_CREATE_TAB_CONFIG();
            GOTO GOTO_END;

        <<GOTO_FORCED>>
            DBMS_OUTPUT.PUT_LINE('Initialize config table...');
            PKG_CONFIG_UTIL.PRC_CREATE_TAB_CONFIG(PI_IS_FORCED=>PI_IS_FORCED);
            DBMS_OUTPUT.PUT_LINE('This config table is mapped to TYP_CONFIG type');
            GOTO GOTO_END;
        <<GOTO_END>>
            NULL;
    END;

    PROCEDURE PRC_INS_INTO_TAB_CONFIG(PI_CONFIG TYP_CONFIG)
    IS
        L_SQL_INS       VARCHAR2(4000);
    BEGIN
        G_CONFIG        := PI_CONFIG;
        L_SQL_INS       := 'INSERT INTO '||G_TAB_CONFIG||' VALUES(PKG_CONFIG_UTIL.FNC_GET_CONFIG())';
        --DBMS_OUTPUT.PUT_LINE(L_SQL_INS);
        EXECUTE IMMEDIATE L_SQL_INS;
    END;
END PKG_CONFIG_UTIL;
