-- TEST LOGGER
DECLARE
    L_LOGGER      TYP_LOGGER := TYP_LOGGER(
        'TEST TRANSACTION CODE',
        'VINHPT',
        'TEST UNIT NAME',
        'TEST UNIT TYPE',
        'TEST DESCRIPTION');
BEGIN
    L_LOGGER.PRC_PRINT_INFO();
    
    DBMS_LOCK.SLEEP(2);
    DBMS_LOCK.SLEEP(3);
    L_LOGGER.PRC_UPDATE_UPDATED_TS_DIM();
    L_LOGGER.PRC_PRINT_INFO();
END;
/

-- TEST LOGGER_EXTEND AND LOGGER UTIL
DECLARE
    L_LOGGER_EXTEND      TYP_LOGGER_EXTEND := TYP_LOGGER_EXTEND(
        'TEST TRANSACTION CODE',
        'VINHPT',
        'TEST UNIT NAME',
        'TEST UNIT TYPE',
        'TEST DESCRIPTION');
    L_TYPE_NAME VARCHAR2(64);
BEGIN
    L_LOGGER_EXTEND.PRC_PRINT_INFO();
    DBMS_LOCK.SLEEP(1);
    L_LOGGER_EXTEND.PRC_UPDATE_LOGGER_EXTEND('STEP 1', 'NO DESCRIPTION');
    PKG_LOGGER_UTIL.PRC_INSERT_LOGGER_RUNNING(L_LOGGER_EXTEND);
--    L_LOGGER_EXTEND.PRC_PRINT_INFO();
--    DBMS_LOCK.SLEEP(2);
    L_LOGGER_EXTEND.PRC_UPDATE_LOGGER_EXTEND('STEP 2', 'NO DESCRIPTION');
    --DBMS_OUTPUT.PUT_LINE(L_LOGGER_EXTEND.TYPE_NAME);
    PKG_LOGGER_UTIL.PRC_INSERT_LOGGER_RUNNING(L_LOGGER_EXTEND);
    RAISE NO_DATA_FOUND;
EXCEPTION
    WHEN OTHERS THEN
        L_LOGGER_EXTEND.PRC_INIT_EXCEPTION('GET 1 ERROR');
        L_LOGGER_EXTEND.PRC_PRINT_INFO();

END;
/

SELECT * FROM TAB_LOGGER_RUNNING;
/

-- TEST STRING FORMAT
DECLARE
BEGIN
    DBMS_OUTPUT.PUT_LINE(utl_lms.format_message('HI %s', 'VINH'));
END;
/

-- TEST LOGGER UTIL
-- CREATE TABLE
DECLARE
BEGIN
    --PKG_META_DATA.G_PREFIX('TABLE') := 'TAB';
    --DBMS_OUTPUT.PUT_LINE(PKG_META_DATA.G_PREFIX('TABLE'));
    PKG_LOGGER_SQL.PRC_INIT(true);
END;
/

-- TRACKING LOG
DECLARE
    L_LOGGER_EXTEND      TYP_LOGGER_EXTEND ;

BEGIN
    PKG_LOGGER_UTIL.G_LOGGER_EXTEND := TYP_LOGGER_EXTEND(
                                            'TEST TRANSACTION CODE',
                                            'VINHPT',
                                            'TEST UNIT NAME',
                                            'TEST UNIT TYPE',
                                            'TEST DESCRIPTION');    
    DBMS_LOCK.SLEEP(1);
    PKG_LOGGER_UTIL.PRC_TRACK_RUNNING('STEP 1', 'NO DESCRIPTION');

    DBMS_LOCK.SLEEP(2);
    PKG_LOGGER_UTIL.PRC_TRACK_RUNNING('STEP 2', 'NO DESCRIPTION');

    RAISE NO_DATA_FOUND;
EXCEPTION
    WHEN OTHERS THEN
        PKG_LOGGER_UTIL.PRC_TRACK_EXCEPTION('SOME EXCEPTION');

END;
/

TRUNCATE TABLE TAB_LOGGER_RUNNING;
/

TRUNCATE TABLE TAB_LOGGER_EXCEPTION;
/

SELECT * FROM TAB_LOGGER_RUNNING
/

SELECT * FROM TAB_LOGGER_EXCEPTION
/

