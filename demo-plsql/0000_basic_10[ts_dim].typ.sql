/* ******************************************************************
** TYP_TS_DIM
** ******************************************************************/
CREATE OR REPLACE TYPE TYP_TS_DIM FORCE
AS OBJECT(
    TYPE_NAME           VARCHAR2(64),
    START_TS            TIMESTAMP,
    START_UNIX_TS       NUMBER,
    START_DATE          DATE,
    START_DNUM          NUMBER,
-- STATIC METHODS
-- CONSTRUCTOR
    CONSTRUCTOR FUNCTION TYP_TS_DIM RETURN SELF AS RESULT,
-- INITIALIZE METHODS
    MEMBER FUNCTION FNC_GET_TS_DIM_INFO RETURN VARCHAR2,
    MEMBER FUNCTION FNC_GET_INFO RETURN VARCHAR2,
    MEMBER PROCEDURE PRC_PRINT_INFO,    
-- MANIPULATAION METHODS
    MEMBER PROCEDURE PRC_UPDATE_TS_DIM(
        PIO_START_TS         IN OUT TIMESTAMP,
        PIO_START_UNIX_TS    IN OUT NUMBER,
        PIO_START_DATE       IN OUT DATE,
        PIO_START_DNUM       IN OUT NUMBER),
    MEMBER PROCEDURE PRC_UPDATE_START_TS_DIM
) NOT FINAL;
/

CREATE OR REPLACE TYPE BODY TYP_TS_DIM
AS
-- STATIC METHODS
-- CONSTRUCTOR
    CONSTRUCTOR FUNCTION TYP_TS_DIM 
    RETURN SELF AS RESULT
    IS
    BEGIN
        TYPE_NAME       := 'TYP_TS_DIM';
        SELF.PRC_UPDATE_START_TS_DIM();
        RETURN;
    END;
-- INITIALIZE METHODS
    MEMBER FUNCTION FNC_GET_TS_DIM_INFO RETURN VARCHAR2
    IS
        L_INFO          VARCHAR2(4000);
        L_DICTIONARY    PKG_UTIL.DICTIONARY;
    BEGIN
        L_DICTIONARY('START_TS')        := START_TS;
        L_DICTIONARY('START_UNIX_TS')   := START_UNIX_TS;
        L_DICTIONARY('START_DATE')      := START_DATE;
        L_DICTIONARY('START_DNUM')      := START_DNUM;
        L_INFO          := PKG_UTIL.FNC_GET_INFO(L_DICTIONARY);
        RETURN L_INFO;
    END;

    MEMBER FUNCTION FNC_GET_INFO 
    RETURN VARCHAR2
    IS
        L_INFO          VARCHAR2(4000);
    BEGIN
        L_INFO          := PKG_UTIL.FNC_GET_STRING_FORMAT('TYPE_NAME', TYPE_NAME);
        L_INFO          := L_INFO || SELF.FNC_GET_TS_DIM_INFO();
        RETURN L_INFO;
    END;

    MEMBER PROCEDURE PRC_PRINT_INFO
    IS
        L_INFO          VARCHAR2(4000);
    BEGIN
        L_INFO          := SELF.FNC_GET_INFO();
        DBMS_OUTPUT.PUT_LINE(L_INFO);
    END;    
-- MANIPULATAION METHODS
    MEMBER PROCEDURE PRC_UPDATE_TS_DIM(
        PIO_START_TS         IN OUT TIMESTAMP,
        PIO_START_UNIX_TS    IN OUT NUMBER,
        PIO_START_DATE       IN OUT DATE,
        PIO_START_DNUM       IN OUT NUMBER)
    IS
    BEGIN
        PIO_START_TS        := CURRENT_TIMESTAMP;
        PIO_START_UNIX_TS   := PKG_UTIL.FNC_GET_UNIX_TS(PIO_START_TS);
        PIO_START_DATE      := SYSDATE;
        PIO_START_DNUM      := PKG_UTIL.FNC_GET_DNUM(PIO_START_TS);
    END;
    MEMBER PROCEDURE PRC_UPDATE_START_TS_DIM
    IS
    BEGIN
        SELF.PRC_UPDATE_TS_DIM(START_TS, START_UNIX_TS, START_DATE, START_DNUM);
    END;
END;
/